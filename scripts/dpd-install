#!/usr/bin/bash
DMY=`date +%d%m%y`
DBNAME=dpd.db
DPDNAME=dpd.db.$DMY
TARNAME=$DBNAME.$DMY.tar
BZ2NAME=$TARNAME.bz2
SCRIPT=`basename $0`
BZ2SRC=~/Downloads/$DBNAME.tar.bz2
BZ2DST=local/$BZ2NAME
TARDST=local/$TARNAME
DPDURL=https://github.com/digitalpalidictionary/dpd-db/releases

echo $SCRIPT '[BEGIN]' `date`
sync

set -e # TERMINATE ON ERROR

echo $SCRIPT: "==> Open browser and download '$DBNAME.tar.bz2' from:"
echo "  https://github.com/digitalpalidictionary/dpd-db/releases"

read -p "$SCRIPT: ==> Downloaded? (Y/n)" YN
if [[ "$YN" != "Y" && "$YN" != "y" && "$YN" != "" ]]; then 
  echo $SCRIPT: "[CANCELED]"
  exit -1
fi

read -p "$SCRIPT: ==> Enter download filename: ($BZ2SRC):" YN
if [ "$YN" != "" ]; then
  BZ2SRC=$YN
fi
echo "$SCRIPT:   $BZ2SRC"

type bzip2 >> /dev/null; RC=$? 
if [ "$RC" == "0" ]; then
  echo $SCRIPT: "bzip2 found (OK)"
else
  echo $SCRIPT: "bzip2 not found (installing...)"
  sudo apt install bzip2
fi

type sqlite3 >> /dev/null; RC=$?
if [ "$RC" == "0" ]; then
  echo $SCRIPT: "sqlite3 found (OK)"
else
  echo $SCRIPT: "sqlite3 not found (installing...)"
  sudo apt install sqlite3
fi

if [ ! -e $BZ2SRC ]; then
  echo $SCRIPT: "$BZ2SRC not found. Waiting..."
  sleep 8
fi
if [ ! -e $BZ2SRC ]; then
  echo $SCRIPT: "$BZ2SRC not found. Waiting..."
  sleep 13
fi
if [ ! -e $BZ2SRC ]; then
  echo $SCRIPT: "$BZ2SRC not found. Waiting..."
  sleep 21
fi
echo "$SCRIPT:"  `ls -l $BZ2SRC`
if [ -e $BZ2SRC ]; then
  echo $SCRIPT: "Moving $BZ2SRC to $BZ2DST"
  mv -f $BZ2SRC $BZ2DST
else
  echo $SCRIPT: "[FAIL] $BZ2SRC not found:"
  exit -1
fi

if [ -e $BZ2DST ]; then
  echo $SCRIPT: "bzip2 -d $BZ2DST (ETA ~10-20s...)"
  rm -f $TARDST
  bzip2 -v -d $BZ2DST
else 
  echo $SCRIPT: "[FAIL] $BZ2DST not found..."
  exit -1
fi

if [ -e $TARDST ]; then
  echo $SCRIPT: "tar xvf $TARDST (...)"
  pushd local > /dev/null
  rm -f $DBNAME
  tar -xvf $TARNAME --transform "s,$DBNAME,$DPDNAME,"
  rm $TARNAME
  ln -sf $DPDNAME $DBNAME
  popd > /dev/null
  echo "$SCRIPT: loaded DPD database"
  echo "$SCRIPT:" `ls -l local/$DPDNAME`
else 
  echo $SCRIPT: "[FAIL] $TARDST not found"
  exit -1
fi

echo $SCRIPT: '[END:OK]' `date`
