#!/bin/bash
SCRIPT=$0
DIRNAME=`dirname $SCRIPT`
node - <<'JS' $DIRNAME $SCRIPT $*

/*************** JAVASCRIPT **********************/
let [ NODE, DASH, DIRNAME, SCRIPT, ...args] = process.argv;
const MAYBE_USELESS = 0;
(async function() {
  const path = (await import('path'));
  const fs = (await import('fs'));
  const { promises: fsp } = fs;
  const { fileURLToPath } = (await import('url'));
  const msg = `${path.basename(SCRIPT)}:`;

  // load inflection CSV
  let inflections = [];
  const srcPath = `${DIRNAME}/../src/inflections.csv`;
  let srcData = await fsp.readFile(srcPath);
  let srcLines = srcData.toString().trim().split('\n');
  let keys = srcLines[0].split(' , ');
  for (let id=1; id<srcLines.length; id++) {
    let line = srcLines[id].split(' , ');
    let entry = {id};
    for (let j=0; j<keys.length; j++) {
      let key = keys[j];
      let value = line[j];
      switch (key) {
        case 'singular':
        case 'plural':
          value = value &&
            value.split('/').map(s=>s.trim().replace('-','') );
          break;
        case "infCase": {
          value = value && value.toLowerCase(); // match DPD
        } break;
      }
      entry[key] = /---*/.test(value) ? null : value;
    }
    inflections.push(entry);
  }

  // Save OCBS inflection rules
  let infJSON = JSON.stringify(inflections, null, 2);
  infJSON = 'export const INFLECTIONS=' + infJSON;
  const dstPath = `${DIRNAME}/../data/inflections-ocbs.mjs`;
  await fs.promises.writeFile(dstPath, infJSON);
  console.log(msg, dstPath);
})()
JS
